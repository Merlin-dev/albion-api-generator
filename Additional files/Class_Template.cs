////////////////////////////////////////////////////////////////////////////////////
// Merlin API for Albion Online AlbionVersion
////////////////////////////////////////////////////////////////////////////////////
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;

using UnityEngine;

using Albion.Common.Time;

namespace Albion_Direct
{
	/* Internal type: ObfuscatedName */
	public partial GenericClass RefactoredNameGenericName GenericWhere GenericBaseType
    {
		private static List<MethodInfo> _methodReflectionPool = new List<MethodInfo>();
		private static List<PropertyInfo> _propertyReflectionPool = new List<PropertyInfo>();
		private static List<FieldInfo> _fieldReflectionPool = new List<FieldInfo>();
				
		private ObfuscatedName _internal;

		#region Properties
		
		public ObfuscatedName RefactoredName_Internal => _internal;
		PropertiesPlaceholder
		#endregion

		#region Fields
		
		FieldsPlaceholder
		#endregion

		#region Methods
		
		MethodsPlaceholder
		#endregion
		
		#region Constructor
		
		public RefactoredName(ObfuscatedName instance) BaseHolder
		{
			_internal = instance;
		}
		
		static RefactoredName()
		{
			ReflectionPoolPlaceholder
		}
		
		#endregion

		#region Conversion
		
		public static implicit operator ObfuscatedName(RefactoredNameGenericName instance)
		{
			return instance._internal;
		}

		public static implicit operator RefactoredNameGenericName(ObfuscatedName instance)
		{
			return new RefactoredNameGenericName(instance);
		}
		
		public static implicit operator bool(RefactoredNameGenericName instance)
        {
            return instance._internal != null;
        }
		#endregion
	}
}